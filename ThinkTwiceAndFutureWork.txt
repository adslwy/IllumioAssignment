1. Currently I'm building the front end with AngularJs, but I haven't finished yet so I decide to push the back end first. The frontend web app should appreciate the concept of "mobile first", therefore, proper bootstrap css style will be used to make sure the mobile experience will remain the same quality.
2. Currently the backend is designed for low user query per second(QPS), therefore one server is enough to handle user request for secrets. In the future, if we want to scale up the service and allow high QPS(properly above 100k) with limit response time(within 10 seconds), then I will try to scale up the service size by implementing load balancer.
3. If the data size become larger and more complex table is added to achieve new features and we still want real time response, then I will consider to use memcached along with other SQL or NoSQL database(perhaps redis is a good choice, but I haven't thought it throughly) to ensure real time response.